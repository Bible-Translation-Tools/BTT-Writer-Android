name: Android CI

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: FranzDiebold/github-env-vars-action@v2.1.0
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Decrypt secret key file
      shell: bash
      run: ./.github/scripts/decrypt_key.sh
      env:
        LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
    - name: test if key is present
      run: find . -name "bttkey.jks"
    - name: Decrypt secret xml file
      shell: bash
      run: ./.github/scripts/decrypt_xml.sh
      env:
        LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
    - name: Acquire resource containers and sqlite
      run: |
        wget --no-verbose -O containers.zip "https://writer-resources.bibletranslationtools.org/containers.zip"
        wget --no-verbose -O index.sqlite "https://writer-resources.bibletranslationtools.org/index.sqlite"
    - name: move new resource containers where they should go
      run: |
        if [ -f containers.zip ]; then rm ./app/src/main/assets/containers.zip && mv ./containers.zip ./app/src/main/assets/containers.zip; fi
        if [ -f index.sqlite ]; then rm ./app/src/main/assets/index.sqlite && mv ./index.sqlite ./app/src/main/assets/index.sqlite; fi
    - name: android 28 env
      run:  echo "ANDROID_TARGET=android-28" >> $GITHUB_ENV
    - name: Test with Gradle
      run: ./gradlew test --stacktrace
    - name: Assemble with Gradle
      run: ./gradlew assembleRelease -PsignIt=true
      env:
        KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
        ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
        ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
    - name: move apk
      run: mkdir ./release && mv ./app/build/outputs/apk/release/release.apk ./release/btt-writer.apk
    - name: set s3 destination_dir for release or dev for install4j updates to work
      run: echo "CURRENT_S3_DESTINATION=$CI_REPOSITORY_OWNER/$CI_REPOSITORY_NAME/$CI_REF_NAME_SLUG/$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
    - name: Tag release on master
      if: github.ref == 'refs/heads/master'
      run: |
          for aapt_path in ${ANDROID_HOME}/build-tools/*/; do break; done \
          && export PATH="$PATH:${aapt_path}" \
          && versionName=`aapt dump badging ./release/btt-writer.apk | grep versionName | awk '{print $4}' | sed s/versionName=//g | sed s/\'//g` \
          && versionCode=`aapt dump badging ./release/btt-writer.apk | grep versionCode | awk '{print $3}' | sed s/versionCode=//g | sed s/\'//g`
          echo "GIT_RELEASE_TAG=v$versionName+$versionCode" >> $GITHUB_ENV
    - name: Upload file to bucket
      uses: shallwefootball/s3-upload-action@v1.1.3
      with:
        aws_key_id: ${{ secrets.AWS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        aws_bucket: ${{ secrets.AWS_BUCKET }}
        source_dir: ./release
        destination_dir: ${{ env.CURRENT_S3_DESTINATION }}
    - name: upload artifacts to github releases on tags
      uses: "marvinpinto/action-automatic-releases@v1.2.1"
      if: github.ref == 'refs/heads/master'
      with:
        automatic_release_tag: ${{ env.GIT_RELEASE_TAG }}
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: release/*.*

  build-en:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: FranzDiebold/github-env-vars-action@v2.1.0
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Decrypt secret key file
        shell: bash
        run: ./.github/scripts/decrypt_key.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      - name: test if key is present
        run: find . -name "bttkey.jks"
      - name: Decrypt secret xml file
        shell: bash
        run: ./.github/scripts/decrypt_xml.sh
        env:
          LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
      - name: Acquire resource containers and sqlite
        run: |
          wget --no-verbose -O containers.zip "https://writer-resources.bibletranslationtools.org/containers-en.zip"
          wget --no-verbose -O index.sqlite "https://writer-resources.bibletranslationtools.org/index.sqlite"
      - name: move new resource containers where they should go
        run: |
          if [ -f containers.zip ]; then rm ./app/src/main/assets/containers.zip && mv ./containers.zip ./app/src/main/assets/containers.zip; fi
          if [ -f index.sqlite ]; then rm ./app/src/main/assets/index.sqlite && mv ./index.sqlite ./app/src/main/assets/index.sqlite; fi
      - name: android 28 env
        run: echo "ANDROID_TARGET=android-28" >> $GITHUB_ENV
      - name: Test with Gradle
        run: ./gradlew test --stacktrace
      - name: Assemble with Gradle
        run: ./gradlew assembleRelease -PsignIt=true
        env:
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
          ALIAS_NAME: ${{ secrets.ALIAS_NAME }}
          ALIAS_PASS: ${{ secrets.ALIAS_PASS }}
      - name: move apk
        run: mkdir ./release && mv ./app/build/outputs/apk/release/release.apk ./release/btt-writer-en.apk
      - name: set s3 destination_dir for release or dev for install4j updates to work
        run: echo "CURRENT_S3_DESTINATION=$CI_REPOSITORY_OWNER/$CI_REPOSITORY_NAME/$CI_REF_NAME_SLUG/$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
      - name: Tag release on master
        if: github.ref == 'refs/heads/master'
        run: |
          for aapt_path in ${ANDROID_HOME}/build-tools/*/; do break; done \
          && export PATH="$PATH:${aapt_path}" \
          && versionName=`aapt dump badging ./release/btt-writer.apk | grep versionName | awk '{print $4}' | sed s/versionName=//g | sed s/\'//g` \
          && versionCode=`aapt dump badging ./release/btt-writer.apk | grep versionCode | awk '{print $3}' | sed s/versionCode=//g | sed s/\'//g`
          echo "GIT_RELEASE_TAG=v$versionName+$versionCode" >> $GITHUB_ENV
      - name: Upload file to bucket
        uses: shallwefootball/s3-upload-action@v1.1.3
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: ./release
          destination_dir: ${{ env.CURRENT_S3_DESTINATION }}
      - name: upload artifacts to github releases on tags
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        if: github.ref == 'refs/heads/master'
        with:
          automatic_release_tag: ${{ env.GIT_RELEASE_TAG }}
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: release/*.*

  connected-tests:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
          cache: 'gradle'

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0777", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run connected tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          arch: x86_64
          ram-size: 8192M
          heap-size: 512M
          profile: pixel_c
          target: google_apis
          script: ./gradlew integrationTests --stacktrace

      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-results 34
          path: ./**/build/reports/androidTests/connected/**