name: Android CI

on: [ push, pull_request ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v2.1.0
    - name: set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Decrypt secret key file
      shell: bash
      run: ./.github/scripts/decrypt_key.sh
      env:
        LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
    - name: test if key is present
      run: find . -name "bttkey.jks"
    - name: Decrypt secret xml file
      shell: bash
      run: ./.github/scripts/decrypt_xml.sh
      env:
        LARGE_SECRET_PASSPHRASE: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
    - name: Acquire resource containers
      run: wget --no-verbose -O containers.zip "https://btt-writer-resources.s3.amazonaws.com/containers.zip"
    - name: move new resource containers where they should go
      run: if [ -f containers.zip ]; then rm ./app/src/main/assets/containers.zip && mv ./containers.zip ./app/src/main/assets/containers.zip; fi
    - name: android 28 env
      run:  echo "ANDROID_TARGET=android-28" >> $GITHUB_ENV
    - name: Test with Gradle
      run: ./gradlew test --stacktrace
    - name: Assemble with Gradle
      run: ./gradlew assembleRelease -PsignIt=true
    - name: move apk
      run: mkdir ./release && mv ./app/build/outputs/apk/release/release.apk ./release/btt-writer.apk
    - name: set s3 destination_dir for release or dev for install4j updates to work
      run: echo "CURRENT_S3_DESTINATION=$CI_REPOSITORY_OWNER/$CI_REPOSITORY_NAME/$CI_REF_NAME_SLUG/$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
    - name: Upload file to bucket
      uses: shallwefootball/s3-upload-action@v1.1.3
      with:
        aws_key_id: ${{ secrets.AWS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        aws_bucket: ${{ secrets.AWS_BUCKET }}
        source_dir: ./release
        destination_dir: ${{ env.CURRENT_S3_DESTINATION }}
    - name: upload artifacts to github releases on tags
      uses: "marvinpinto/action-automatic-releases@v1.2.1"
      if: contains( github.ref, 'refs/tags/v' )
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: release/*.*
