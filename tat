[1;33mdiff --git i/app/src/main/java/com/door43/translationstudio/core/ContainerCache.java w/app/src/main/java/com/door43/translationstudio/core/ContainerCache.java[m
[1;33mindex 697b9f1..5387784 100644[m
[1;33m--- i/app/src/main/java/com/door43/translationstudio/core/ContainerCache.java[m
[1;33m+++ w/app/src/main/java/com/door43/translationstudio/core/ContainerCache.java[m
[1;35m@@ -35,6 +35,16 @@[m [mpublic class ContainerCache {[m
      */[m
     private List<String> inspectedContainers = Collections.synchronizedList(inspected_list);[m
 [m
[1;32m+[m[1;32m    /**[m
[1;32m+[m[1;32m     * A base for the synchronized list below[m
[1;32m+[m[1;32m     */[m
[1;32m+[m[1;32m    private List<String> inspecting_list = new ArrayList<>();[m
[1;32m+[m
[1;32m+[m[1;32m    /**[m
[1;32m+[m[1;32m     * A list of container slugs that are currently being inspected[m
[1;32m+[m[1;32m     */[m
[1;32m+[m[1;32m    private List<String> loadingContainers = Collections.synchronizedList(inspecting_list);[m
[1;32m+[m
     private static ContainerCache sInstance = null;[m
 [m
     static {[m
[1;35m@@ -50,28 +60,42 @@[m [mpublic class ContainerCache {[m
     }[m
 [m
     /**[m
[1;31m-     * Caches an exact match to a resource container if one exists.[m
[1;32m+[m[1;32m     * Caches resource container if it exists[m
      * If the container has already been cached it will not touch the disk.[m
[1;32m+[m[1;32m     *[m
      * @param client[m
      * @param resourceContainerSlug[m
      * @return[m
      */[m
     public static ResourceContainer cache(Door43Client client, String resourceContainerSlug) {[m
[1;31m-        // check the cache first[m
[1;32m+[m[1;32m        // wait for other threads[m
[1;32m+[m[1;32m        waitForLoadingContainers(resourceContainerSlug);[m
[1;32m+[m
[1;32m+[m[1;32m        // check cache[m
         if (sInstance.resourceContainers.containsKey(resourceContainerSlug)) {[m
[1;31m-//            Logger.i("ContainerCache", "cache hit: " + resourceContainerSlug);[m
             return sInstance.resourceContainers.get(resourceContainerSlug);[m
         }[m
[1;31m-        // cache it[m
[1;31m-        try {[m
[1;31m-//            Logger.i("ContainerCache", "cache miss: " + resourceContainerSlug);[m
[1;31m-            ResourceContainer rc = client.open(resourceContainerSlug);[m
[1;31m-            sInstance.resourceContainers.put(rc.slug, rc);[m
[1;31m-            return rc;[m
[1;31m-        } catch (InvalidRCException e) {[m
[1;31m-            client.delete(resourceContainerSlug);[m
[1;31m-        } catch (Exception e) {[m
[1;31m-            e.printStackTrace();[m
[1;32m+[m
[1;32m+[m[1;32m        // load from disk once[m
[1;32m+[m[1;32m        if(!sInstance.inspectedContainers.contains(resourceContainerSlug)) {[m
[1;32m+[m[1;32m            // flag as loading[m
[1;32m+[m[1;32m            sInstance.loadingContainers.add(resourceContainerSlug);[m
[1;32m+[m[1;32m            try {[m
[1;32m+[m[1;32m                ResourceContainer rc = client.open(resourceContainerSlug);[m
[1;32m+[m[1;32m                sInstance.resourceContainers.put(rc.slug, rc);[m
[1;32m+[m[1;32m                return rc;[m
[1;32m+[m[1;32m            } catch (InvalidRCException e) {[m
[1;32m+[m[1;32m                e.printStackTrace();[m
[1;32m+[m[1;32m                // delete invalid container[m
[1;32m+[m[1;32m                client.delete(resourceContainerSlug);[m
[1;32m+[m[1;32m            } catch (Exception e) {[m
[1;32m+[m[1;32m                e.printStackTrace();[m
[1;32m+[m[1;32m            } finally {[m
[1;32m+[m[1;32m                // fag as inspected[m
[1;32m+[m[1;32m                sInstance.inspectedContainers.add(resourceContainerSlug);[m
[1;32m+[m[1;32m                // remove loading flag[m
[1;32m+[m[1;32m                sInstance.loadingContainers.remove(resourceContainerSlug);[m
[1;32m+[m[1;32m            }[m
         }[m
         return null;[m
     }[m
[1;35m@@ -89,37 +113,35 @@[m [mpublic class ContainerCache {[m
      */[m
     public static ResourceContainer cacheClosest(Door43Client client, String languageSlug, String projectSlug, String resourceSlug) {[m
         if(languageSlug == null || languageSlug.isEmpty()) languageSlug = Locale.getDefault().getLanguage();[m
[1;31m-        String translationSlug = ContainerTools.makeSlug(languageSlug, projectSlug, resourceSlug);[m
[1;31m-        // attempt to cache the container[m
[1;32m+[m
[1;32m+[m[1;32m        // search for translation[m
         List<Translation> translations = client.index.findTranslations(languageSlug, projectSlug, resourceSlug, null, null, 0, -1);[m
         if (translations.size() == 0) {[m
[1;31m-            // try to find any language[m
[1;32m+[m[1;32m            // search for similar translations[m
             translations = client.index.findTranslations(null, projectSlug, resourceSlug, null, null, 0, -1);[m
         }[m
[1;31m-        // load the first available container[m
[1;32m+[m
[1;32m+[m[1;32m        // return first successful cache[m
         for (Translation translation : translations) {[m
[1;31m-            // check cache[m
[1;31m-            if(sInstance.resourceContainers.containsKey(translation.resourceContainerSlug)) {[m
[1;31m-//                Logger.i("ContainerCache", "cache hit: " + translation.resourceContainerSlug);[m
[1;31m-                return sInstance.resourceContainers.get(translation.resourceContainerSlug);[m
[1;31m-            }[m
[1;32m+[m[1;32m            ResourceContainer rc = cache(client, translation.resourceContainerSlug);[m
[1;32m+[m[1;32m            if(rc != null) return rc;[m
[1;32m+[m[1;32m        }[m
[1;32m+[m[1;32m        return null;[m
[1;32m+[m[1;32m    }[m
 [m
[1;31m-            // load from disk (only attempts to load once)[m
[1;31m-            if (!sInstance.inspectedContainers.contains(translation.resourceContainerSlug)) {[m
[1;31m-                sInstance.inspectedContainers.add(translation.resourceContainerSlug);[m
[1;31m-                try {[m
[1;31m-//                    Logger.i("ContainerCache", "cache miss: " + translation.resourceContainerSlug);[m
[1;31m-                    ResourceContainer rc = client.open(translation.resourceContainerSlug);[m
[1;31m-                    sInstance.resourceContainers.put(rc.slug, rc);[m
[1;31m-                    return rc;[m
[1;31m-                } catch (InvalidRCException e) {[m
[1;31m-                    client.delete(translation.resourceContainerSlug);[m
[1;31m-                } catch (Exception e) {[m
[1;31m-                    e.printStackTrace();[m
[1;31m-                }[m
[1;32m+[m[1;32m    /**[m
[1;32m+[m[1;32m     * Puts the thread to sleep while the container is loading[m
[1;32m+[m[1;32m     * @param containerSlug the translation to load[m
[1;32m+[m[1;32m     */[m
[1;32m+[m[1;32m    private static void waitForLoadingContainers(String containerSlug) {[m
[1;32m+[m[1;32m        while (sInstance.loadingContainers.contains(containerSlug)) {[m
[1;32m+[m[1;32m            try {[m
[1;32m+[m[1;32m                Thread.sleep(500);[m
[1;32m+[m[1;32m            } catch (InterruptedException e) {[m
[1;32m+[m[1;32m                e.printStackTrace();[m
[1;32m+[m[1;32m                Thread.currentThread().interrupt();[m
             }[m
         }[m
[1;31m-        return null;[m
     }[m
 [m
     /**[m
[1;35m@@ -127,6 +149,7 @@[m [mpublic class ContainerCache {[m
      * @return[m
      */[m
     public static ResourceContainer get(String containerSlug) {[m
[1;32m+[m[1;32m        waitForLoadingContainers(containerSlug);[m
         if(sInstance.resourceContainers.containsKey(containerSlug)) {[m
             return sInstance.resourceContainers.get(containerSlug);[m
         }[m
[1;35m@@ -149,6 +172,8 @@[m [mpublic class ContainerCache {[m
                 ResourceContainer container = ContainerCache.cacheClosest(client, link.language, link.project, link.resource);[m
                 if(container != null) {[m
                     links.add(link);[m
[1;32m+[m[1;32m                } else {[m
[1;32m+[m[1;32m                    Logger.w("ContainerCache", "RC not found for link " + rawLink);[m
                 }[m
             } catch (Exception e) {[m
                 e.printStackTrace();[m
[1;33mdiff --git i/app/src/main/java/com/door43/translationstudio/ui/translate/review/RenderHelpsTask.java w/app/src/main/java/com/door43/translationstudio/ui/translate/review/RenderHelpsTask.java[m
[1;33mindex 665c439..c93612a 100644[m
[1;33m--- i/app/src/main/java/com/door43/translationstudio/ui/translate/review/RenderHelpsTask.java[m
[1;33m+++ w/app/src/main/java/com/door43/translationstudio/ui/translate/review/RenderHelpsTask.java[m
[1;35m@@ -49,14 +49,25 @@[m [mpublic class RenderHelpsTask extends ManagedTask {[m
         result.put("notes", new ArrayList<>());[m
         setResult(null);[m
 [m
[1;32m+[m[1;32m        if(getTaskId().equals("render_helps_01_11_task")) {[m
[1;32m+[m[1;32m            Logger.i(TAG, "stop!");[m
[1;32m+[m[1;32m        }[m
[1;32m+[m
         if(interrupted()) return;[m
         Map<String, List<String>> config = item.getChunkConfig();[m
 [m
         if(interrupted()) return;[m
         if (config.containsKey("words")) {[m
[1;32m+[m[1;32m            Logger.i(TAG, "looking up words for " + getTaskId());[m
[1;32m+[m[1;32m            if(getTaskId().equals("render_helps_01_11_task")) {[m
[1;32m+[m[1;32m                Logger.i(TAG, "stop");[m
[1;32m+[m[1;32m            }[m
             List<Link> links = ContainerCache.cacheClosestFromLinks(library, config.get("words"));[m
             Pattern titlePattern = Pattern.compile("#(.*)");[m
             for (Link link : links) {[m
[1;32m+[m[1;32m                if(getTaskId().equals("render_helps_01_11_task")) {[m
[1;32m+[m[1;32m                    Logger.i(TAG, "looking up link " + link.arguments + " for " + getTaskId());[m
[1;32m+[m[1;32m                }[m
                 if (interrupted()) return;[m
                 try {[m
                     ResourceContainer rc = ContainerCache.cacheClosest(App.getLibrary(), link.language, link.project, link.resource);[m
[1;35m@@ -76,7 +87,9 @@[m [mpublic class RenderHelpsTask extends ManagedTask {[m
                 }[m
             }[m
 //                    if(links.size() > 0) Logger.i("Resource Card", getTaskId() + " found words at position " + position);[m
[1;31m-            result.put("words", links);[m
[1;32m+[m[1;32m            if(links.size() > 0) {[m
[1;32m+[m[1;32m                result.put("words", links);[m
[1;32m+[m[1;32m            }[m
         }[m
 [m
         if (interrupted()) return;[m
[1;35m@@ -108,7 +121,9 @@[m [mpublic class RenderHelpsTask extends ManagedTask {[m
                     Logger.e(TAG, e.getMessage(), e);[m
                 }[m
 //                    if(translationQuestions.size() > 0) Logger.i("Resource Card", getTaskId() + " found questions at position " + position);[m
[1;31m-                result.put("questions", translationQuestions);[m
[1;32m+[m[1;32m                if(translationQuestions.size() > 0) {[m
[1;32m+[m[1;32m                    result.put("questions", translationQuestions);[m
[1;32m+[m[1;32m                }[m
             }[m
         }[m
 [m
[1;35m@@ -133,11 +148,19 @@[m [mpublic class RenderHelpsTask extends ManagedTask {[m
                     Logger.e(TAG, e.getMessage(), e);[m
                 }[m
 //                    if(translationNotes.size() > 0) Logger.i("Resource Card", getTaskId() + " found notes at position " + position);[m
[1;31m-                result.put("notes", translationNotes);[m
[1;32m+[m[1;32m                if(translationNotes.size() > 0) {[m
[1;32m+[m[1;32m                    result.put("notes", translationNotes);[m
[1;32m+[m[1;32m                }[m
             }[m
         }[m
 [m
         if(interrupted()) return;[m
[1;32m+[m[1;32m        if(result.containsKey("words") && ((List)result.get("words")).size() > 0) Logger.i(TAG, "Found words for " + getTaskId());[m
[1;32m+[m[1;32m        if(result.containsKey("questions") && ((List)result.get("questions")).size() > 0) Logger.i(TAG, "Found questions for " + getTaskId());[m
[1;32m+[m[1;32m        if(result.containsKey("notes") && ((List)result.get("notes")).size() > 0) Logger.i(TAG, "Found notes for " + getTaskId());[m
[1;32m+[m[1;32m        if(getTaskId().equals("render_helps_01_11_task")) {[m
[1;32m+[m[1;32m            Logger.i(TAG, "stop!");[m
[1;32m+[m[1;32m        }[m
         setResult(result);[m
     }[m
 [m
